player.onChat("house", function () {
    originPosition = player.position()
    // place agent at player's position and facing WEST
    agent.teleport(originPosition, WEST)
    agent.move(FORWARD, 2)
    buildBase(13, 8, Block.PlanksSpruce)
// make boundary of quartz around baes
    agent.move(FORWARD, 9)
    agent.setAssist(PLACE_ON_MOVE, true)
    agent.setItem(BLOCK_OF_QUARTZ, 64, 1)
    agent.move(BACK, 10)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 13)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 9)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 4)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 8)
    agent.move(UP, 1)
    agent.setAssist(PLACE_ON_MOVE, false)
    // manuver agent to start buliding wall
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.move(BACK, 1)
    makeWall(3, 3, BLOCK_OF_QUARTZ)
agent.move(FORWARD, 1)
    agent.move(DOWN, 3)
    agent.move(FORWARD, 4)
    makeWall(2, 3, BLOCK_OF_QUARTZ)
agent.turn(RIGHT_TURN)
    makeWall(3, 3, BLOCK_OF_QUARTZ)
agent.move(FORWARD, 1)
    agent.move(DOWN, 3)
    agent.move(FORWARD, 4)
    makeWall(2, 3, BLOCK_OF_QUARTZ)
// start building black wall.
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    makeWall(4,3,PLANKS_SPRUCE)
agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    // start stairs
    agent.turn(LEFT_TURN)
    agent.setItem(SPRUCE_WOOD_STAIRS, 64, 1)
    agent.place(FORWARD)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(LEFT_TURN)
    agent.place(FORWARD)
    agent.move(UP, 1)
    agent.move(FORWARD, 1)
    agent.place(FORWARD)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.place(FORWARD)
    agent.move(UP, 1)
    agent.move(FORWARD, 2)
    agent.setItem(PLANKS_SPRUCE, 64, 1)
    agent.place(DOWN)
    agent.move(FORWARD, 1)
    agent.place(DOWN)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.place(DOWN)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.place(DOWN)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.setItem(SPRUCE_WOOD_STAIRS, 64, 1)
    agent.destroy(FORWARD)
    agent.place(FORWARD)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.destroy(FORWARD)
    agent.place(FORWARD)
    // secondstair
    agent.move(UP, 1)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(LEFT_TURN)
    agent.setItem(PLANKS_SPRUCE, 64, 1)
    agent.place(DOWN)
    agent.move(FORWARD, 1)
    agent.place(DOWN)
    agent.move(FORWARD, 1)
    agent.place(DOWN)
    // end of stairs
    agent.move(FORWARD, 4)
    // going to next position to build inner spruce wood wall
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 9)
    agent.move(DOWN, 3)
    agent.turn(RIGHT_TURN)
    makeWall(2,3,PLANKS_SPRUCE)
makeWall(3,3,BLACK_STAINED_GLASS_PANE)
agent.move(DOWN, 2)
    makeWall(3,3,PLANKS_SPRUCE)
agent.setItem(PLANKS_SPRUCE, 64, 1)
    agent.move(UP, 1)
    agent.place(DOWN)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.move(DOWN, 3)
    makeWall(2,3,PLANKS_SPRUCE)
makeWall(3, 3, BLACK_STAINED_GLASS_PANE)
agent.move(DOWN, 2)
    makeWall(4, 3, PLANKS_SPRUCE)
agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.setItem(PLANKS_SPRUCE, 64, 1)
    agent.place(BACK)
    agent.destroy(DOWN)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 2)
    agent.turn(RIGHT_TURN)
    agent.place(FORWARD)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.place(FORWARD)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    makeWall(7,3,PLANKS_SPRUCE)
agent.move(UP, 1)
    agent.move(BACK, 1)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.move(DOWN, 3)
    makeWall(1,3,PLANKS_SPRUCE)
agent.move(UP, 1)
    agent.place(DOWN)
    agent.move(FORWARD, 1)
    agent.place(DOWN)
    agent.move(FORWARD, 1)
    agent.move(DOWN, 3)
    makeWall(2,3,PLANKS_SPRUCE)
agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    makeWall(1,3,PLANKS_SPRUCE)
agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.move(DOWN, 3)
    agent.turn(RIGHT_TURN)
    makeWall(3,3,BLOCK_OF_QUARTZ)
agent.move(DOWN, 2)
    agent.setItem(BLACK_STAINED_GLASS_PANE, 64, 1)
    agent.setAssist(PLACE_ON_MOVE, true)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 9)
    agent.turn(RIGHT)
    agent.move(FORWARD, 2)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.setAssist(PLACE_ON_MOVE, false)
    // done glass rim
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 2)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 4)
    agent.turn(RIGHT_TURN)
    makeWall(1,3,BLACK_STAINED_GLASS_PANE)
agent.move(DOWN, 2)
    makeWall(1, 3, PLANKS_SPRUCE)
agent.move(UP, 1)
    agent.place(DOWN)
    agent.move(FORWARD, 1)
    agent.place(DOWN)
    agent.move(FORWARD, 1)
    agent.move(DOWN, 3)
    makeWall(1, 3, PLANKS_SPRUCE)
agent.move(DOWN, 2)
    makeWall(1, 3, BLACK_STAINED_GLASS_PANE)
agent.move(UP, 1)
    agent.setItem(BLACK_STAINED_GLASS_PANE, 64, 1)
    agent.place(DOWN)
    agent.move(FORWARD, 5)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 6)
    agent.move(DOWN, 1)
    agent.setItem(PLANKS_SPRUCE, 64, 1)
    agent.place(FORWARD)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(LEFT_TURN)
    agent.place(FORWARD)
    agent.move(UP, 1)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 2)
    agent.setItem(SPRUCE_WOOD_STAIRS, 64, 1)
    agent.place(FORWARD)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    // two stair done
    agent.place(FORWARD)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    makeWall(2,4,PLANKS_SPRUCE)
agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(LEFT_TURN)
    // second floor base start
    agent.setItem(BLOCK_OF_QUARTZ, 64, 1)
    agent.setAssist(PLACE_ON_MOVE, true)
    agent.turn(LEFT_TURN)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 5)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 11)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 10)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 16)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 8)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 5)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 3)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 6)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 5)
    buildBase(10,9,BLOCK_OF_QUARTZ)
agent.move(UP, 1)
    agent.place(DOWN)
    agent.move(FORWARD, 10)
    agent.turn(LEFT_TURN)
    agent.move(BACK, 1)
    agent.move(FORWARD, 2)
    agent.setAssist(PLACE_ON_MOVE, true)
    agent.setItem(BLACK_STAINED_GLASS_PANE, 64, 1)
    agent.move(BACK, 2)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 11)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 10)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 4)
    makeWall(1,3,BLOCK_OF_QUARTZ)
agent.move(DOWN, 2)
    makeWall(4, 3, BLACK_STAINED_GLASS_PANE)
makeWall(2, 3, BLOCK_OF_QUARTZ)
makeWall(4, 3, BLACK_STAINED_GLASS_PANE)
agent.turn(RIGHT_TURN)
    makeWall(8, 3, BLOCK_OF_QUARTZ)
agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(LEFT_TURN)
    makeWall(3, 3, BLACK_STAINED_GLASS_PANE)
agent.move(DOWN, 2)
    makeWall(2, 3, BLOCK_OF_QUARTZ)
makeWall(4, 3, BLACK_STAINED_GLASS_PANE)
makeWall(2, 3, BLOCK_OF_QUARTZ)
agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(LEFT_TURN)
    agent.setItem(BLOCK_OF_QUARTZ, 64, 1)
    makeWall(2, 3, BLOCK_OF_QUARTZ)
agent.move(UP, 2)
    agent.turn(RIGHT_TURN)
    agent.setItem(SPRUCE_DOOR, 64, 1)
    agent.move(UP, 1)
    agent.setItem(BLOCK_OF_QUARTZ, 64, 1)
    agent.place(DOWN)
    agent.turn(LEFT)
    agent.move(FORWARD, 1)
    agent.move(DOWN, 1)
    agent.turn(RIGHT_TURN)
    agent.setItem(SPRUCE_DOOR, 64, 1)
    agent.move(UP, 1)
    agent.setItem(BLOCK_OF_QUARTZ, 64, 1)
    agent.place(DOWN)
    agent.turn(LEFT)
    agent.move(FORWARD, 1)
    agent.move(DOWN, 3)
    makeWall(2,3,BLOCK_OF_QUARTZ)
agent.turn(LEFT)
    agent.move(BACK, 1)
    agent.setItem(BLOCK_OF_QUARTZ, 64, 1)
    agent.place(FORWARD)
    agent.move(BACK, 2)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 3)
    agent.setItem(RED_BED, 64, 1)
    agent.place(FORWARD)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.place(FORWARD)
    agent.setItem(SPAWN_PANDA, 64, 1)
    agent.place(BACK)
    agent.move(UP, 3)
    agent.move(FORWARD, 4)
    agent.turn(LEFT_TURN)
    agent.move(BACK, 5)
    buildBase(14,9,BLOCK_OF_QUARTZ)
agent.move(UP, 1)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    buildBase(14, 9, GRASS)
agent.setItem(NETHER_BRICK_SLAB, 64, 1)
    agent.setAssist(PLACE_ON_MOVE, true)
    agent.move(FORWARD, 15)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 10)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 16)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 10)
    agent.setAssist(PLACE_ON_MOVE, false)
    agent.move(UP, 1)
    agent.place(DOWN)
    agent.setAssist(PLACE_ON_MOVE, true)
    agent.setItem(NETHER_BRICK_SLAB, 64, 1)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.setAssist(PLACE_ON_MOVE, true)
    agent.move(FORWARD, 15)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 10)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 16)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 10)
    agent.setAssist(PLACE_ON_MOVE, false)
    agent.move(DOWN, 1)
    agent.move(FORWARD, 3)
    agent.move(DOWN, 10)
    agent.destroy(DOWN)
    agent.turn(LEFT_TURN)
    agent.setItem(SEEDS, 64, 1)
    agent.setItem(BONE_MEAL, 64, 1)
    for (let index = 0; index < 7; index++) {
        agent.move(FORWARD, 1)
        agent.destroy(DOWN)
    }
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.destroy(DOWN)
    agent.turn(LEFT_TURN)
    for (let index = 0; index < 7; index++) {
        agent.move(FORWARD, 1)
        agent.destroy(DOWN)
    }
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD, 1)
    agent.destroy(DOWN)
    agent.turn(RIGHT_TURN)
    for (let index = 0; index < 7; index++) {
        agent.move(FORWARD, 1)
        agent.destroy(DOWN)
    }
    agent.turn(RIGHT_TURN)
    agent.move(UP, 2)
    agent.move(FORWARD, 4)
    agent.move(FORWARD, 6)
    agent.move(DOWN, 2)
    for (let index = 0; index < 9; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(RIGHT_TURN)
    for (let index = 0; index < 1; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(RIGHT_TURN)
    for (let index = 0; index < 8; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(LEFT_TURN)
    for (let index = 0; index < 1; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(LEFT_TURN)
    for (let index = 0; index < 8; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(RIGHT_TURN)
    for (let index = 0; index < 1; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(RIGHT_TURN)
    for (let index = 0; index < 8; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(LEFT_TURN)
    for (let index = 0; index < 1; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(LEFT_TURN)
    for (let index = 0; index < 8; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(RIGHT_TURN)
    for (let index = 0; index < 1; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(RIGHT_TURN)
    for (let index = 0; index < 8; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(LEFT_TURN)
    for (let index = 0; index < 1; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(LEFT_TURN)
    for (let index = 0; index < 8; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(RIGHT_TURN)
    for (let index = 0; index < 1; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(RIGHT_TURN)
    for (let index = 0; index < 8; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(LEFT_TURN)
    for (let index = 0; index < 1; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.turn(LEFT_TURN)
    for (let index = 0; index < 8; index++) {
        agent.setItem(SEEDS, 64, 1)
        agent.setItem(BONE_MEAL, 64, 2)
        agent.setItem(BONE_MEAL, 64, 3)
        agent.setSlot(1)
        agent.till(FORWARD)
        agent.place(FORWARD)
        agent.setSlot(2)
        agent.place(FORWARD)
        agent.move(FORWARD, 1)
    }
    agent.move(LEFT, 4)
    agent.move(BACK, 4)
    agent.destroy(DOWN)
    agent.setSlot(3)
    agent.place(DOWN)
    agent.move(BACK, 5)
    agent.move(LEFT, 6)
    for (let index = 0; index < 4; index++) {
        agent.setItem(SPRUCE_FENCE, 64, 4)
        agent.setSlot(4)
        for (let index = 0; index < 11; index++) {
            agent.place(RIGHT)
            agent.move(FORWARD, 1)
        }
        agent.turn(RIGHT_TURN)
        agent.move(FORWARD, 1)
    }
    agent.setItem(SPRUCE_WOOD_STAIRS, 64, 4)
    agent.turn(LEFT_TURN)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 10)
    agent.place(FORWARD)
    
    for (let i = 0; i < 4; i++) {
        agent.turn(RIGHT_TURN)
        agent.move(FORWARD, 1)
        agent.turn(LEFT_TURN)
        agent.place(FORWARD)
    }
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.move(UP,1)
    agent.move(FORWARD, 2)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD,1)
    agent.turn(RIGHT_TURN)
    agent.setItem(IRON_DOOR, 64, 1)
    agent.setSlot(1)
    agent.place(FORWARD)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 1)
    agent.turn(RIGHT_TURN)
    agent.place(FORWARD)//place second door.
    agent.turn(LEFT_TURN)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD,4)
    agent.turn(RIGHT_TURN)
    agent.move(UP,1)
    agent.move(FORWARD,3)
    agent.move(DOWN,2)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD,2)
    agent.turn(LEFT_TURN)
    agent.setSlot(1)
    buildBase(8,3,ICE)//poolstart
    agent.move(UP,1)
    agent.setItem(ICE,64,1)//poolend
    agent.setSlot(1)
    agent.place(DOWN)
    agent.move(UP, 1)
    agent.turn(RIGHT_TURN)
    agent.move(FORWARD,13)
    agent.turn(LEFT_TURN)
    agent.move(FORWARD, 3)
    agent.move(DOWN,2)
    agent.place(DOWN)//farm water
})
let originPosition: Position = null
function makeWall (width: number, height: number, blockType: Block) {
    agent.setItem(blockType, width * height, 1)
    agent.setAssist(PLACE_ON_MOVE, true)
    
    for (let index202 = 0; index202 < width; index202++) {
        const direction = index202 % 2 == 0 ? UP : DOWN
        agent.move(direction, height - 1)
        agent.move(FORWARD, 1)
    }
    agent.setAssist(PLACE_ON_MOVE, false)
}
function buildBase (width: number, length: number, blockType: Block) {
    agent.setAssist(PLACE_ON_MOVE, true)
    agent.setItem(blockType, width * length, 1)
    for (let index222 = 0; index222 <= length - 1; index222++) {
        const direction2 = index222 % 2 ? RIGHT_TURN : LEFT_TURN
        agent.move(FORWARD, width)
        agent.turn(direction2)
        agent.move(FORWARD, 1)
        agent.turn(direction2)
    }
    agent.setAssist(PLACE_ON_MOVE, false)
}

